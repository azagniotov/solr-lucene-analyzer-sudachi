メルカリのマーケットプレイスにおける商品検索は、お客さまが欲しい物を発見する最も基本的な方法です。この中核となる機能は、
テキストマッチングによる情報検索システムによって実現されています。 しかし最近、私たちは自問自答しました。
お客さまの検索体験を向上させる、合理的な機械学習ベースのアプローチはあるのだろうか？という疑問が生まれました。メルカリアプリ上のお客さまの行動を、
彼らにとってより関連性の高い検索結果についてのヒントとして捉えることはできないでしょうか？学習データにラベルを付け、
単体のユーザークリックという行為をもとにした分析の限界を念頭に置きながら、モデルが学習するための、より情報量の多いコンテキストを構築できないでしょうか？
ビジネスKPIとの関係を把握するために、どのようにデータラベリングを利用できるでしょうか？ それは、長く、困難で、興味深い旅であり、
我々はその過程で多くの教訓を得ました。この記事で紹介した取り組みや開発を通じて、私たちはビジネスのKPIに統計的に有意な変化をもたらしました。
今では私たちのモデルは本番環境における「ベストマッチ」（この記事では「おすすめ順」での検索ベストマッチと呼びます）
検索フローのトラフィックの100％を処理しています。しかし、これはほんの始まりに過ぎません。 メルカリでの検索は、
Elasticsearchのテキストマッチングをベースとした情報検索システムを利用していました。デフォルトでは、ElasticsearchはOkapi
BM25と呼ばれるランキングアルゴリズムを利用しています。BM25アルゴリズムは、
与えられたクエリ内のキーワードのうちインデックス内の検索対象となるフィールドにマッチするのはそのうちのいくつかなのかを考慮し、
特徴的なマッチや短いフィールドへのマッチがより高い関連性スコアに貢献します。 しかし、メルカリでは検索結果をそのまま提供するのではなく、
結果をお客さまに表示する際にはカスタムランキングの手法を採用しています。そのためメルカリでは、BM25をそのまま利用せず、
商品の出品時間を重視した独自のランキング関数（Recency Boosting）を定義しています。メルカリでは、ユーザーにとって重要な検索体験を提供するために、
検索フローの種類に応じて、マッチしたクエリをさまざまな方法で並べます。例えば、一般的な検索フローとして、「新しく出品された商品」と「ベストマッチ」
の2つの項目があります。「ベストマッチ」ランキングでは、類似度スコアの高い、しかし古いアイテムが検索結果の上位に含まれることを避けたいため、
Recency Boosting（アイテム/リストがいつ作成されたか）も組み込んでいます。 過去には、お客さまにより良い検索ユーザー体験を提供するために、
機械学習によるランキングの試みも数多く行われました。これらの試みの中には、A/Bテストにおいて成功したものもありましたが、
これらはビジネスKPIの統計的に有意な改善にはつながりませんでした。 今回のブログでは、メルカリで行われた機械学習技術を応用して検索結果の精度を向上させる取り組みのうち、
そのうちのひとつだけに焦点を当てています。この取り組みの焦点は、メルカリで「ベストマッチ」フローと呼ばれる検索動作の改善でした。
ここでいう「ベストマッチ」とは、テキストマッチング型情報検索システムのランキング機能によって決定される、クエリと文書の類似度スコアが高いことを意味します。
最近のテキストマッチ型情報検索システムは、全文検索が可能で、高速かつ強力です。また、自然言語処理（NLP）機能を利用して、数値（dense）
ベクトルとして表現されたテキスト埋め込みを用いてテキストの言語的内容を把握し、クエリと文書間の意味的類似性の評価に利用できる場合もあります。
強力なシステムではありますが、インデックスされたコンテンツに加え、どのようなシグナル（ユーザー行動から得られる情報）を取得できるかという点ではまだ限界があります。
例えばメルカリのお客さまは、検索行動の習慣によって、いくつかの特徴的な利用傾向を見出すことできます。 どんな商品を買ったり見たりするのが好きなのか
検索結果のスクロールをどこまで許容するか 提示された検索結果から、実際にプレビューした結果の数 商品の詳細を見るときの滞在時間 その他ビジネス交流など
買い手だけでなく、売り手も売りたい商品の参考価格を決定するために検索を利用します。例えば検索結果で売り切れた商品をチェックして値付けを決めることもあります。
通常のテキストマッチングシステムでは、このような暗黙的・明示的なユーザーシグナルを捉えることができません。これらは、
ユーザーが認識する検索結果の関連性やパーソナライズを向上させるための潜在的なシグナルとなり得ます。 情報検索システムが出す検索結果の関連性を高めたい場合、
一次検索処理のあとに何らかの後処理を施して、エンドユーザーに表示する項目の順番を最適化する必要があります。これに対するアプローチとして、
情報検索／推薦システムで広く使われているのが、機械学習を活用した検索後処理、すなわちリランキング(Re-ranking）です。
これは実はかなり一般的な情報検索システムのアーキテクチャで、テキストマッチングシステム（例：Elasticsearch、Solrなど）
から最初の結果セットを取得する第一段階の検索があります。これは「Recall」フェーズであり、「クエリに関連する文書をすべて取得できたか？」
という問で表現できます。次に、機械学習によって検索結果の後処理を行うフェーズでRe-rankingを行うわけです。これが「Precision」のフェーズで、
「検索された文書から、どの文書が関連性があるか？」という問いかけで表現できます。つまり「精度」のフェーズでは検索結果のうち、
よりクエリに対する関連性が高い結果の部分集合を得るプロセスを指します。 LTRでは、モデルを学習するためにラベル付けされたデータが必要です。
1つの方法として、検索クエリと検索結果のログに手動で明示的なラベルを付け、各項目を人間が判断して関連性スコアを割り当てる方法があります。

